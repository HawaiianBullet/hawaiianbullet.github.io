import{g as d,o as l,c as u,a as i}from"./entry.9bde1cbd.js";function f(r){const e=s=>r(s.detail);return window.addEventListener("eip6963:announceProvider",e),window.dispatchEvent(new CustomEvent("eip6963:requestProvider")),()=>window.removeEventListener("eip6963:announceProvider",e)}function v(){const r=new Set;let e=[];const s=()=>f(t=>{e.some(({info:o})=>o.uuid===t.info.uuid)||(e=[...e,t],r.forEach(o=>o(e,{added:[t]})))});let n=s();return{_listeners(){return r},clear(){r.forEach(t=>t([],{removed:[...e]})),e=[]},destroy(){this.clear(),r.clear(),n()},findProvider({rdns:t}){return e.find(o=>o.info.rdns===t)},getProviders(){return e},reset(){this.clear(),n(),n=s()},subscribe(t,{emitImmediately:o}={}){return r.add(t),o&&t(e,{added:e}),()=>r.delete(t)}}}const m=i("h1",null,"EIP-6963 Test",-1),w={class:"flex flex-col space-y-10"},h=d({__name:"test",setup(r){async function e(s){var c;console.log({rdns:s});const t=(c=v().findProvider({rdns:s}))==null?void 0:c.provider;console.log({walletProvider:t});let o;try{o=await t.request({method:"eth_requestAccounts"})}catch(a){console.error("Error",{e:a}),o=await window.ethereum.request({method:"eth_requestAccounts"})}console.log({accounts:o}),alert(JSON.stringify(o))}return(s,n)=>(l(),u("div",null,[m,i("div",w,[i("button",{onClick:n[0]||(n[0]=t=>e("io.metamask"))},"Metamask"),i("button",{onClick:n[1]||(n[1]=t=>e("com.coinbase.wallet"))}," Coinbase "),i("button",{onClick:n[2]||(n[2]=t=>e("com.okex.wallet"))},"OKX")])]))}});export{h as default};
